@page "/arrival-detail"

<PageTitle>ArrivalDetail</PageTitle>

@using MainLine.Data
@using MainLine.Data.Services
@inject IArrivalService _arrivalService;

<style scoped>
    .arrival-row {
        padding: 10px 10px 5px 10px;
        border-bottom: 2px solid #ccc;
    }
    .arrival-details {
        justify-content: left;
        display: flex;
    }
    .arrival-icon {
        width: 30px;
        flex-shrink: 0;
        text-align: center;
        padding-left: 5px;
    }
    .arrival-time {
        margin-left: auto !important;
    }
</style>

<div class="row text @textColor arrival-row" style="background-color: @arrival.RouteColor">

    <small class="px-0">@arrival.Route #@arrival.RunId to</small>
    <div class="arrival-details flex-row flex-fill p-0 align-items-center"> 
        <span class="fs-2">@arrival.DestinationName</span>
        <span class="fs-3 arrival-time">@arrival.ArrivalTimeInMinutes</span>
        <span class="arrival-icon material-symbols-outlined">@arrivalIcon</span>
    </div>
    @* <p class="mb-0 px-0">@arrival.StationName @arrival.StopId - @arrival.StopDescription</p> *@
</div>

@code {
    [Parameter]
    public MainLine.Data.Arrival arrival { get; set; }

    public string arrivalIcon => arrival.IsScheduled ? "schedule" : "rss_feed"; // Show a clock if it's scheduled, otherwise show a feed icon
    public string textColor => arrival.RouteColor == "#F9E300" ? "text-dark" : "text-light"; // Black text for yellow line
}
