@page "/arrival-details"

<PageTitle>ArrivalDetails</PageTitle>

@using MainLine.Data
@using MainLine.Data.Services
@inject IArrivalService _arrivalService;

<style scoped>
    .arrival-row {
        padding: 10px 10px 5px 10px;
        border-bottom: 2px solid #ccc;
    }
    .arrival-details {
        justify-content: left;
        display: flex;
    }
    .arrival-icon {
        width: 30px;
        flex-shrink: 0;
        text-align: center;
        padding-left: 5px;
    }
    .arrival-time {
        margin-left: auto !important;
    }
</style>

<div class="row text @textColor arrival-row" style="background-color: @Arrival.Rt.GetTrainLineColor()">
    @if (Arrival.Rn != 0)
    {
        <small class="px-0">@Arrival.Rt.GetTrainLineName() #@Arrival.Rn.GetLineNumberFormatted() to</small>
    }
    <div class="arrival-details flex-row flex-fill p-0 align-items-center"> 
        <span class="fs-2">@Arrival.DestNm</span>
        <span class="fs-3 arrival-time">@arrivalTime</span>
        <span class="arrival-icon material-symbols-outlined">@arrivalIcon</span>
    </div>
    <p class="mb-0 px-0">@Arrival.StaNm @Arrival.StpId - @Arrival.StpDe</p>
</div>

@code {
    [Parameter]
    public Eta Arrival { get; set; }

    public string arrivalTime => Arrival.ArrT.GetArrivalTime(Arrival.IsSch == 0); // Transform DateTime to "12 min" countdown
    public string arrivalIcon => Arrival.IsSch == 0 ? "rss_feed" : "schedule"; // Is live or is scheduled
    public string textColor => Arrival.Rt == "Y" ? "text-dark" : "text-light"; // Black text for yellow line
}
