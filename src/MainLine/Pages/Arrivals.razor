@page "/arrivals"

<PageTitle>Arrivals</PageTitle>

@using MainLine.Data
@using MainLine.Data.Services
@inject IArrivalService _arrivalService;

<div class="container">
    

    <h1>@(string.IsNullOrWhiteSpace(stationName) ? "Arrivals" : $"Arrivals for {stationName}") 🚉</h1>
    <hr />

    @if (arrivals?.Any() is true)
    {
        foreach (var arrival in arrivals)
        {
            <ArrivalDetails Arrival="arrival" />
        }
    }
    else
    {
        <p>No arrivals to show. Try entering a Station ID below.</p>
    }

    <div class="input-group mb-3">
        <button class="btn btn-primary" type="button" id="arrivals-btn" @onclick="GetArrivals">Find Arrivals</button>
        <input type="text" class="form-control" placeholder="Station/Map ID (ie. 41360)" aria-label="Station/Map ID" aria-describedby="arrivals-btn" @bind="userInput" />
    </div>

    @if (lastUpdated != DateTime.MinValue)
    {
        <small class="text text-small">Last Updated: @lastUpdated.ToShortDateString() @lastUpdated.ToShortTimeString()</small>
    }

</div>

@code {
    private IEnumerable<Eta> arrivals = new List<Eta>();
    private DateTime lastUpdated = DateTime.MinValue;
    private string userInput = string.Empty;
    private string stationName = string.Empty;

    private async Task GetArrivals()
    {
        userInput ??= string.Empty;
        arrivals = Enumerable.Empty<Eta>();
        var response = await _arrivalService.GetArrivalTimeByStationId(userInput);

        if (response != null)
        {
            arrivals = response.Ctatt?.Eta ?? new List<Eta>();
            lastUpdated = DateTime.Now;
            stationName = arrivals.FirstOrDefault()?.StaNm ?? string.Empty;
            StateHasChanged();
        }
    }
}
