@page "/arrivals"

<PageTitle>Arrivals</PageTitle>

@using MainLine.Data
@using MainLine.Data.Services
@inject IArrivalService _arrivalService;

<div class="container">
    
    <h1>@(!string.IsNullOrWhiteSpace(stationName) && !string.IsNullOrWhiteSpace(userInput) ? $"Arrivals for {stationName} - {userInput}" : "Arrivals") 🚉</h1>
    <br />

    <div class="input-group mb-3">
        <button class="btn btn-primary" type="button" id="arrivals-btn" @onclick="GetArrivals">Find Arrivals</button>
        @if (arrivals?.Any() is true)
        {
            <button class="btn btn-outline-primary" type="button" id="clear-btn" @onclick="ClearResults">Clear Results</button>
        }
        <input type="text" class="form-control" placeholder="Station/Map ID (ie. 41360)" aria-label="Station/Map ID" aria-describedby="arrivals-btn" @bind="userInput" />
    </div>

    @if (arrivals?.Any() is true)
    {
        foreach (var arrival in arrivals)
        {
            <ArrivalDetails Arrival="arrival" />
        }
    }
    else
    {
        @if (isLoading == true)
        {
            <p>
                <div class="spinner-border text-primary" role="status">
                    <span class="sr-only"></span>
                </div>
            </p>
        }
        else
        {
            <p>No arrivals to show. Try entering a Station ID below.</p>
        }
    }

    @if (lastUpdated != DateTime.MinValue)
    {
        <small class="text text-small">Last Updated: @lastUpdated.ToShortDateString() @lastUpdated.ToShortTimeString()</small>
    }

</div>

@code {
    private IEnumerable<Eta> arrivals = new List<Eta>();
    private DateTime lastUpdated = DateTime.MinValue;
    private string userInput = string.Empty;
    private string stationName = string.Empty;
    private bool isLoading = false;

    private async Task GetArrivals()
    {
        userInput ??= string.Empty;
        arrivals = Enumerable.Empty<Eta>();
        isLoading = true;
        var response = await _arrivalService.GetArrivalTimeByStationId(userInput);
        var response2 = await _arrivalService.GetMappedArrivalTimeByStationId(userInput);

        if (response != null)
        {
            arrivals = response.Ctatt?.Eta ?? new List<Eta>();
            arrivals = arrivals.OrderBy(a => a.StpId);
            lastUpdated = DateTime.Now;
            stationName = arrivals.FirstOrDefault()?.StaNm ?? string.Empty;
            isLoading = false;
            StateHasChanged();
        }
    }

    private void ClearResults()
    {
        userInput = string.Empty;
        arrivals = Enumerable.Empty<Eta>();
        lastUpdated = DateTime.MinValue;
        stationName = string.Empty;
        isLoading = false;
        StateHasChanged();
    }
}
